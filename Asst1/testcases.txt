Test case E randomly chooses between a malloc or a free 6000 times and for each malloc, stores a string in each character pointer. This shows that the implementation of malloc can in fact store data and that free frees up space for more data.

Test case F allocates randomly sized pointers 3000 times, and then frees every other pointer so that there is significant fragmentation within the memory block in mymalloc.c. The function then attempts to allocated 3000 more randomly sized pointers, testing malloc's ability to find blocks that fit the requested allocation.  Note that this would result in many null pointers since the first 3000 mallocs would fill up the memory block and the spread out pointers will result in minimal coalescing. Therefore the second round of mallocs may not fit in many blocks.
